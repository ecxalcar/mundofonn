<style>
    .button-slider {
        position: relative;
        text-align: end;
    }

    .button-slider button svg {
        width: 60%;
        height: 60%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .glider-related-products-prev,
    .glider-related-products-next {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        position: relative;
        left: auto;
        right: auto;
        border: 0;
        transition: opacity .5s cubic-bezier(.17,.67,.83,.67),color .5s cubic-bezier(.17,.67,.83,.67);
    }

    .button-slider .glider-related-products-prev {
        top: 0;
        left: auto;
        right: 0;
    }

    .glider-dot.active {
        background: #ffc107;
    }

    .glider-related-products-prev.disabled,
    .glider-related-products-next.disabled {
        opacity: .25;
        cursor: default;
    }

    .related-products-section .glider-slide img {
        max-width: 100%;
        max-height: 200px;
        object-fit: contain;
    }
</style>

<div class="related-products-section">
    <div class="container py-5">
        <h3 class="pt-4">Related Products</h3>
    
        <div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=8">
            <div class="button-slider mb-1">
                <button aria-label="Previous" class="glider-related-products-prev bg-warning ms-3"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-left" class="svg-inline--fa fa-chevron-left fa-w-10" color="white" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"></path></svg></button>
                <button aria-label="Next" class="glider-related-products-next bg-warning ms-3"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-right" class="svg-inline--fa fa-chevron-right fa-w-10" color="white" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"></path></svg></button>
            </div><!--/.button-slider-->
            <div class="glider-recommendations">
                {% if recommendations.performed and recommendations.products_count > 0 %}
                    {% for product in recommendations.products %}
                        <div class="card mx-auto h-100 swiper-slide">
                            {% if product.featured_media == blank %}
                                {{ 'product-5' | placeholder_svg_tag }}
                            {% else %}
                                {{ product.featured_media | image_url: 'master' | image_tag: alt: '', class: 'card-img-top' }}
                            {% endif %}
                            <div class="card-body">
                                <h5 class="card-title">{{ product.price | money_with_currency }}</h5>
                                <a href="{{ product.url }}"><p class="card-text h4 mb-3">{{ product.title }}</p></a>
                                <a href="#" class="btn btn-warning">Ver detalles</a>
                            </div><!-- /card-body -->
                        </div><!-- /card -->
                    {% endfor %}
                {% endif %}

            </div><!-- /.glider-recommendations -->
            <div class="related-products-dots"></div>
        </div><!-- /product-recommendations -->
    
    </div><!-- /container -->
</div>

<script>
    window.addEventListener('load', function() {

        const handleIntersection = (entries, observer) => {
            if ( !entries[0].isIntersecting ) return;

            observer.unobserve(productRecommendationsSection);
            const url = productRecommendationsSection.dataset.url;

            fetch(url)
            .then(response => response.text() )
            .then(text => {
                const html = document.createElement('div');
                html.innerHTML = text;
                const recommendations = html.querySelector('.product-recommendations');

                if(recommendations && recommendations.innerHTML.trim().length) {
                    productRecommendationsSection.innerHTML = recommendations.innerHTML;

                    new Glider(document.querySelector('.glider-recommendations'), {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        draggable: false,
                        dots: '.related-products-dots',
                        duration: 0.90,
                        itemWidth: 150,

                        arrows: {
                            prev: '.glider-related-products-prev',
                            next: '.glider-related-products-next'
                        },
                        responsive: [
                            {
                                breakpoint: 576,
                                settings: {
                                slidesToShow: 2,
                                slidesToScroll: 1
                                }
                            },
                            {
                                breakpoint: 768,
                                settings: {
                                slidesToShow: 3,
                                slidesToScroll: 1
                                }
                            },
                            {
                                breakpoint: 1024,
                                settings: {
                                slidesToShow: 4,
                                slidesToScroll: 1
                                }
                            }
                        ]
                    });

                }
            } )
            .catch(e => {
                console.error(e);
            });
        }

        const productRecommendationsSection = document.querySelector('.product-recommendations');
        const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px' });
        observer.observe(productRecommendationsSection);

    });
</script>